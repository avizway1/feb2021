EC2 : Elastic Compute Cloud : 

Instance = Server = Box = Azure VM = GCP Engine


Pay-as-you-go machanism..!! 

____________________________________________________________________________________
D: 09/03/2021

ec2 : Elastic compute cloud :

On-Demand ec2 instances : Unpredictable workload.. Testing our application.. No stable workloads..
Price : /Sec (with Min of 60 Sec)

Reserved Instances / RI : Predictable workloads.. Stable workloads.. FOr long terms with AWS.. Duration: 1 Yr / 3 yr

	Standard RI : We cannot change the configuration.
	Convertable RI : We can upgrade the configuration.
	Scheduled RI : Persisant req during the purchased duration (ex: MON-FRI, weekly 	40 hrs)

Price : FullUpfront : Pay 100% now, get your instance.
	Partial Upfront : Pay 30-50% now, AWS will reduse the hourly price, Within month 	how many hours you are using, pay for that only.
	No Upfront : Need to hourly basis.

Spot Instances : We can bid against the aws pricing, IF your quoted price is equal or more than aws price, We will get the instance.
--> If Price increased by AWS, Our instances terminates. We no need to pay for Partial Hour.   1 hr 45 min : 1 hr cost
--> If price not increase by AWS, you terminated your instance, we need to pay full hour cost.   1 hr 45 min :  1 hr 45 min Cost


ec2 instance isolation diagram : 

Tenancy : 
Shared Tenancy : underlying hardware shared with multiple customers.
Dedicated Tenancy : Underlying hardware will not share with any other customers.
	--> Dedicated Instane : We wil get dedicated instance.
	--> Dedicated Host : We can launch multiple instances. If you want to bind any 		licenses to cpu/memory reosurces, we need to choose this.


______________________________________________________________________________________

D: 10/03/2021

Ec2 is a region specific service.

Mumbai : Very near to me..!! 
NVirginia : 


Step 1 : Choose an AMI (Amazon Machine Image)		: CHoose the OS

Step 2 : CHoose the Instance type			: Choose t2.micro (FREE TIER)

General Purpose : gives balance performance of compute, memory and networking resources. We use this for wide usecases. 
--> t2, t3, t3a, m4, m5, m5a, m6g, a1

COmpute Otimized : optimised for compute bound applications that requires hight perf processors. More CPU utilized resources.
--> c4, c5, c5n, c6g

Memory Optimized : TO process large data set via memory.  More Memory consumed application required this type of instances.
--> r4, r5, r5n, r6g, x1, x1e, z1

Accelerated Computing : More Grahic processing, if application required hardware acceleration..!! GPU instances.
--> p4, p3, p2, g3, g4, f1

Storage optimized : High perf from the storage (hard disk).  It gives more I/O per
(IOPS) from storage.
--> h1, d2, d3, d3en, i3


t3.xlarge, 4 vCPU, 16 RAM
c5.xlarge, 4 vCPU, 8 RAM
m4.large, 2 vCPU, 8 RAM

Step 3 : Choose additional options.

Shutdown behavior : Stop  (What should happen to your ec2 instance if you initiate shutdown from OS level)
Enable termination protection : Enable

Step 4: Add Storage				: windows 30 Gb

Step 5 : Add tags
	Name : 
	Application : App X
	COst center : AZZAA
	Platform    : Windows / Linux

Step 6 : COnfigure the Security groups (0-65535 protocols/port)

Windows : RDP : 3389 : 0.0.0.0/0
Linux : SSH : 22
webserver : http : 80
Secure webserver : https : 443
ms sql : 1433
mysql : 3306
DNS : 53

Step 7 : Review and Launch instance with a Keypair.

AWS Holds the public, aws copies that public key to the ec2 instance.
We will get the private key (.pem), If we want to connect to the instance, we need to browse the private key against the public key.. Then we will get the password. 


TO connect to windows instance:
--> run --> mstsc --> enter --> remote desktop connection windows
--> go to start and search for "remote desktop"
--> Select instance--> click on "connect" --> RDP Client --> "Download remote desktop file" --> open it.


Task : Launch an ec2 instance, connect to instance with the keypair given password.. and change the password.. Signout then try to login with keypair given password and custom password..!!!!

Task 2 : WIndows instances supports 2 terminal connections.. 
--> Create another user at OS level.. Provide Local Admin rights to this user.. Provide "Remote desktop permissions".. 
--> keep Administrator session active... and try to take session as newly created OS user.

_________________________________________________________________________________________

D: 11/03/2021

Step 1 : CHoose an AMI 		: Amazon Linux 2

Step 2 : Choose an Instance	: t2.micro

Step 3 : Additional configurations : 
	--> Shutdown behaviour : STOP
	--> Termination protection : Enable

Step 4 : Choose the storage	: windows Min 30 gb, Linux min 8 gb

Step 5 : Add tags

Step 6 : Configure the Securoty Groups

Linux : port 22 : SSH : 0.0.0.0/0

Step 7 : Review and Create a Keypair and launch instance.  (.pem file)

How to connect to Linux Instance.!!
--> Putty (puppt won't support .pem file.. We need to use .ppk file)
	--> Before launching an ec2 instance, create .ppk file and use it.
	--> Using "PuttyGen", convert the .pem to .ppk
	--> https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html
	--> COnnections --> Expand SSH --> Select AUTH and browse the valid .ppk file

--> GIT bash terminal  (.pem)	: https://git-scm.com/download/win
--> Windows command prompt (.pem) : Enable openssh in windows 10. (settings --> Apps --> optional features --> openssh client)

--> MAC OS / Linux : Open terminal

ssh -i keypairname.pem username@publicip

Common issue : Permissions are too open/everyone.
chmod 400 keypair.pem
_______
Whenever we are launching an ec2 instance AWS verify the health status of the ec2 instance and underlying hardware. (2/2)

System status checks : Hardware level issues : STOP and START the instance.
Instance status checks : OS level issues : reboot.. Verify system logs..
_____

http://35.154.145.145/

13.126.24.226

Elastic IP Address : EIP : 
Whenever we stop/start ec2 instance, we will get a new public ip address. Get have a fixed ip address, we can use EIP.


Free Tier : 750 Hrs/Month, t2.micro Windows Instance.. 
750 Hrs/Month, t2.micro Linux Instance..

1 instance = 31 x 24 hrs = 744 Hrs
2 instance = 16 x 24 hrs = 750+ hrs

We can have 20 running instances at a time. 


_____________________________________________________________________________________

D: 12/03/2021 


EBS : Elastic Block Storage 

root volume : Contains Operating system.

Delete on Termination : If we terminate our ec2 instance, what should happen to our ebs volume.

Boot Volumes (to run root volumes) : gp2, gp3, io1, io2, magnetic 

Free Tier : 30 gb / Month

General Purpose SSD : gp2 / gp3 : For most of the common worklods we use this. Development and test environments.. Low-latency interactive applications.. 
Size : Min 1 Gb, Max : 16 TB
Max IOPS : 16,000

gp2 : we will get iops based on 1:3 ratio (1 gb = 3 iops) with min of 100 iops. We cannot specify required iops count.
gp3 : We have a flexibility to choose the required IOPS count.

___

Provisioned IOPS : io1 / io2 : If we required highest performance from volumes. If we need more than 16k IOPS. Production environemnt, IO Intensive applications.. Production databases..
Size : Min 4 Gb, Max : 16 TB
Max IOPS : 64,000

Default iops ratio is 1 : 50, but We have a flexibility to choose the required IOPS count.

____

Throughout optimized hdd : st1 : sequential frequently data processing worklods we use this. --> bigdata, Log processings, Data warehousing solutions...  (EMR)
Size : Min 125 Gb, Max : 16 TB
Max IOPS : 500

Cold hdd : sc1 : sequential lessfrequently data processing worklods we use this. Lowest cose than st1.. 
Size : Min 125 Gb, Max : 16 TB
Max IOPS : 250

___

Previous generation : Standard / Magnetic
--> Lowest cost strage for infrequrntly accessed worklods we choose Magnetic.
Size : 1 gb, Max : 1 tb
Iops : 40-200 iops


--> run --> diskmgmt.msc --> enter
-> start --> Server Manager --> tools --> Computer management --> 

choose the volume, make it online, Initilise with MBR, Create a new volume with file system.

windows : fat16, fat 32, ntfs, ReFS
Linux : ext3, ext4, xfs

Task : Increase the size of an existing volume.
--> Increase the voluem size at console level first.  then OS level.

--> We cannot decrease the EBS volume. Only increase is possible.


Instance 1 			Instance 2

in what AZ..? ap-south-1a	Same AZ..? ap-south-1a	--> Detach and attach.

ap-south-1a			ap-south-1b		--> Create a SS and From snapshot create a volume in required AZ, then we can associate.


Snapshot : Snapshot is a backup copy of our ebs volume. 



Task : Launch an ec2 instance in ap-south-1a with 30 gb root volume.. Create 1 gb volume, associate with instance and make it available.
--> Increase the 1gb volume size to 2 gb.. and make it aval at os level and add some data.. 

Task 2 :  Launch another ec2 instance in ap-south-1b.. get the 2gb additional volume from ap-south-1a instance and make it avail here. verify all data existed or not..!!!

_______________________________________________________________________________________

D: 13/03/2021

Snapshots : 
--> Snapshots stores in s3 platform in backend.
--> Snapshot works as Point-in-time-recovery copy. 
--> We can create a snapshot
	--> We can create a volume in same region but another AZ.
	--> We can copy snapshot to another region, there we can create volume.
	--> We can share snapshot with another AWS account.
	--> We can make snapshot public also.
--> We cannot share a snapshot that is encrypted with Default encryption key. 

--> If we want to enable encyrption for an existing volume, not possible.  We can create snapshot of the existing volume, restore, we can enable "encryption". 

--> Fast snapshot restore : boost the snapshot restoration process. COst heavily.

__

DLM : Data Lifecycle Manager : (Snapshot manager)

Retains : 
Production : 14 Days
Non Prod : 7 Days


Udemy :

Linux : 	https://www.udemy.com/course/linuxwithavinash/?couponCode=MAR2021

Jenkins: 	https://www.udemy.com/course/jenkinswithavinash/?couponCode=MAR2021

Git 	:	
	https://www.udemy.com/course/gitbyavinash/?referralCode=F7D62CDB4D61EADE1CC7


______________________________________________________________________________________

D: 15/03/2021


Requirement : 100 ec2 instances, Custom WP, IST, Web Server (IIS), Putty 

CIS : Center for Internet Security. 

Golden AMI : Customised AMI.. 

1 ec2 instance :--> Perform all customisations.. then create an AMI.


http://localhost/
http://127.0.0.1
IEESC : Internet explorer Enhanced security configuration. 



Security Groups : Works as firewall at Instance level.
NACL : Network ACcess Control List : Works as firewall at subnet level (ap-south-1a/1b)

SG are sateful. We always need to takes care about the Inbound rules.
By Defaultly, all outbiund traffic is allowed. 
We need to open required ports in inbound rules.
--> Changes to the SG takes effect immediately. No need to stop/start instance.

Inbound = Traffic/Service delivering from ec2 instance.
Outbound = Traffic/Service coming into ec2 instance.

_______________________________________________________________________________________

D: 16/03/2021

ec2-user : Default user name

sudo su			--> Switch to root user
whoami			--> As what user we are working now
ls			--> list the files / directory
ls -a			--> List everything (including hidden)

in linux any file name or folder name starts with . : it's a hidden file/dir

pwd 			--> print working directory : it tells us where we are working 
cd			--> Change directory

cd /home/ec2-user

touch filename		--> create a simple file

VIM Editor : 

vim filename		--> FIle opens in editor
press I			--> INSERT mode
press ESC		--> TO comeout from Insert mode
:wq			--> Write the changes and quit the editor
:q!			--> Quit editor without writing the data

more / cat		--> TO view the file content without opening file

cp			--> copy and paste
mv			--> cut and paste / "To rename file/folder"

mkdir			--> Make directory

rpm			--> Redhat package manager
yum 			--> Yellowdog updater manager


yum install httpd -y	--> To install apache webserver
service httpd start	(stop/restart/status)	--> TO start the service
chkconfig httpd on	--> Make httpd as logon service

cd /var/www/html/	

vim index.html	, write the data , :wq!	


lsblk		--> shows all the devices associated to instance
df -Th		--> available Volumes and mount points

________________________________________________________________________________________

D: 17/03/2021

lsblk  : list the block devices
df -Th : list the available devices

new volume name : /dev/xvdf

to check file system on existing volume :   	file -s /dev/xvdf

Write xfs file system to new volume 	:	mkfs -t xfs /dev/xvdf			

we need to mount to start using it.

mkdir newvolume

mount /dev/xvdf newvolume

to do perminent mount, we need to add an entry to fstab file (/etc/fstab)
Get the entry information from /etc/mtab file

cat /etc/mtab .. and look for the most recent entry related to our volume.. then copy it and write this information to /etc/fstab file.

/dev/xvdf /home/ec2-user/newvolume xfs rw,relatime,attr2,inode64,noquota 0 0

vim /etc/fstab --> Paste the abouve informaiton.

_______

To increase the existing volume size.

yum install xfsprogs		--> To install xfs tools 

xfs_growfs -d newvolume/

ext3 / ext4: resize2fs 
_______


Task 1 : Launch an amazon linux instance, Associate a volume (1gb), and make it available. Increase the size to 2 gb..  write some data to 2gb volume..

Launch another linux instance.. detach the 2gb volume from instance 1 and attach here.. make it available and verify the data.

______

Instance 1 : associated with a keypair.. you lost that keypair.. --> Create a GoldenAMI of instance 1.. Launch instance 2 from GoldenAMI, associate new keypair to this instance 2.. 

________________________________________________________________________________________

D: 18/03/2021

Userdata : http://169.254.169.254/latest/user-data/

#!/bin/bash
yum install httpd -y
service httpd start
chkconfig httpd on
echo "<h1>This is my BSS Webserver</h1>" >> /var/www/html/index.html

<script>
echo %DATE% %TIME% >> C:\Windows\Temp\test.txt
</script>
<persist>true</persist>

<powershell>
tzutil /s "India Standard Time"
echo %DATE% %TIME% >> C:\Windows\Temp\test.txt
</powershell>
<persist>true</persist>


Metadata : http://169.254.169.254/latest/meta-data/
curl http://169.254.169.254/latest/meta-data/

ami-id
ami-launch-index
ami-manifest-path
block-device-mapping/
events/
hibernation/
hostname
identity-credentials/
instance-action
instance-id
instance-life-cycle
instance-type
local-hostname
local-ipv4
mac
metrics/
network/
placement/
profile
public-hostname
public-ipv4
public-keys/
reservation-id
security-groups
services/

____________

ENI : Elastic Network Interface.


Instance store volumes : Ephemeral Storages : NO FREE TIER ELIGIBILITY
--> We cannot stop/start the ec2 instances.
--> We will loss the instance/data if underlying hardware failure happens.

___________




























